function(create_gtest TEST_NAME TEST_FILES SOURCE_FILES)
    add_executable(${TEST_NAME} ${TEST_FILES})

    set(TEST_DEPENDENCIES_LIB "${TEST_NAME}Dependency")
    add_library(${TEST_DEPENDENCIES_LIB} STATIC EXCLUDE_FROM_ALL ${SOURCE_FILES})
    set_target_properties(${TEST_DEPENDENCIES_LIB} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY  ${CMAKE_BINARY_DIR}/Test/lib)
    set_target_properties(${TEST_DEPENDENCIES_LIB} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/Test/lib)
    set_target_properties(${TEST_DEPENDENCIES_LIB} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/Test/lib)
    set_target_properties(${TEST_DEPENDENCIES_LIB} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_BINARY_DIR}/Test/lib)
    set_target_properties(${TEST_DEPENDENCIES_LIB} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL ${CMAKE_BINARY_DIR}/Test/lib)
    set_target_properties(${TEST_DEPENDENCIES_LIB} PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Test)
    set_target_properties(${TEST_DEPENDENCIES_LIB} PROPERTIES LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/Test)
    set_target_properties(${TEST_DEPENDENCIES_LIB} PROPERTIES LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/Test)
    set_target_properties(${TEST_DEPENDENCIES_LIB} PROPERTIES LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_BINARY_DIR}/Test)
    set_target_properties(${TEST_DEPENDENCIES_LIB} PROPERTIES LIBRARY_OUTPUT_DIRECTORY_MINSIZEREL ${CMAKE_BINARY_DIR}/Test)
    set_target_properties(${TEST_DEPENDENCIES_LIB} PROPERTIES PREFIX "lib")
    set_target_properties(${TEST_DEPENDENCIES_LIB} PROPERTIES DEBUG_POSTFIX "_d")
    add_dependencies(${TEST_NAME} ${TEST_DEPENDENCIES_LIB})
    target_link_libraries(${TEST_DEPENDENCIES_LIB} ${RELATIVE_LIBS})
    List(APPEND RELATIVE_LIBS "${TEST_DEPENDENCIES_LIB}")

    if(MSVC)
        set_property(TARGET ${TEST_NAME} PROPERTY MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
        target_link_libraries(${TEST_NAME} PRIVATE GTest::gtest ${RELATIVE_LIBS})
    else()
        target_link_libraries(${TEST_NAME} PRIVATE GTest::gtest pthread ${RELATIVE_LIBS})
    endif()
    set_target_properties(${TEST_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Test)
    set_target_properties(${TEST_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/Test)
    set_target_properties(${TEST_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/Test)
    set_target_properties(${TEST_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_BINARY_DIR}/Test)
    set_target_properties(${TEST_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${CMAKE_BINARY_DIR}/Test)
    gtest_discover_tests(${TEST_NAME}
                         WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/Test
                         TEST_LIST ${GTEST_LIST})
    add_dependencies(BuildAndTest ${TEST_NAME})
    message("----create gtest:${TEST_NAME} --succeeded")
endfunction()

find_package(GTest REQUIRED)
if (GTEST_FOUND)
    enable_testing()
    include_directories(${GTEST_INCLUDE_DIRS})
    include(GoogleTest)

    add_custom_target(BuildAndTest ${CMAKE_CTEST_COMMAND} -V --rerun-failed --output-on-failure)
    set_target_properties(BuildAndTest PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Test)
    set_target_properties(BuildAndTest PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG ${PROJECT_SOURCE_DIR}/Test)
    set_target_properties(BuildAndTest PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR}/Test)
    set_target_properties(BuildAndTest PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${PROJECT_SOURCE_DIR}/Test)
    set_target_properties(BuildAndTest PROPERTIES RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${PROJECT_SOURCE_DIR}/Test)

    set(CTEST_PARALLEL_LEVEL 6)
    aux_source_directory(. TEST_FILES)
    create_gtest(AllTest "${TEST_FILES}" "${SOURCE_FILES}")

    # FOREACH(it ${TEST_SOURCE_FILES})
    #     get_filename_component(OUTPUT_FILE_WLE ${it} NAME_WLE)
    #     create_gtest(${OUTPUT_FILE_WLE})
    # ENDFOREACH()
endif()